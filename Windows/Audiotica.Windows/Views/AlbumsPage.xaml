<Page
    x:Class="Audiotica.Windows.Views.AlbumsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Audiotica.Windows.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:customTriggers="using:Audiotica.Windows.CustomTriggers"
    xmlns:controls="using:Audiotica.Windows.Controls"
    xmlns:tools="using:Audiotica.Windows.Tools"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:common="using:Audiotica.Windows.Common"
    xmlns:extensions="using:Audiotica.Windows.Extensions"
    mc:Ignorable="d"
    DataContext="{Binding AlbumsPage, Source={StaticResource ViewModelLocator}}">

    <Page.Resources>
        <DataTemplate x:Key="JumpTemplate">
            <Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding Group.GridLeftLength}" />
                        <ColumnDefinition Width="{Binding Group.GridRightLength}" />
                    </Grid.ColumnDefinitions>
                    <Grid />
                    <Grid Grid.Column="1" VerticalAlignment="Stretch" Background="Black" />
                </Grid>
                <Grid Margin="10"
                      Opacity="{Binding Group.Count, Converter={StaticResource ReverseEmptyListToVisibilityConverter}, ConverterParameter=float}">
                    <StackPanel>
                        <TextBlock Text="{Binding Group.Key}"
                                   Style="{ThemeResource TitleTextBlockStyle}" />
                        <TextBlock Style="{StaticResource TaglineTextBlockStyle}">
                            <Run Text="{Binding Group.Count}" />
                            <Run Text="album(s)" />
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid x:Name="LayoutRoot" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <controls:LibraryHeader x:Name="LibraryHeader" Title="Albums" DefaultSortIndex="{x:Bind ViewModel.DefaultSort}"
                                SortItems="{x:Bind ViewModel.SortItems}"
                                ShuffleAllCommand="{x:Bind ViewModel.ShuffleAllCommand}"
                                CurrentSortChangedCommand="{x:Bind ViewModel.SortChangedCommand}"
                                IsSelectMode="{x:Bind ViewModel.IsSelectMode, Mode=TwoWay}"/>

        <!--No Music-->
        <controls:NoMusicPanel Grid.Row="1" x:Name="NoMusicPanel"
                               Margin="{StaticResource PageSideThickness}"
                               Visibility="{x:Bind ViewModel.LibraryService.Albums.Count, Mode=OneWay, Converter={StaticResource ReverseEmptyListToVisibilityConverter}}" />

        <SemanticZoom x:Name="AlbumsGridZoom" Grid.Row="1">
            <SemanticZoom.ZoomedInView>
                <common:ScrollGridView x:Name="AlbumsGridView"
                                       extensions:ListViewExtensions.BindableSelection="{Binding SelectedItems, Mode=TwoWay}"
                                       Padding="{StaticResource PageThickness}"
                                       VerticalOffset="{x:Bind ViewModel.GridViewVerticalOffset, Mode=TwoWay}"
                                       SelectionMode="{x:Bind ViewModel.IsSelectMode, Mode=OneWay, Converter={StaticResource NoneMultiSelectionModeConverter}}"
                                       IsItemClickEnabled="True"
                                       ItemsSource="{x:Bind ViewModel.ViewSource.View, Mode=OneWay}"
                                       ItemTemplate="{StaticResource AlbumTemplate}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.AlbumClickCommand}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                    <GridView.GroupStyle>
                        <GroupStyle HidesIfEmpty="True">
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate x:DataType="tools:AlphaKeyGroup">
                                    <TextBlock Text="{x:Bind Key}" FontSize="14.5"
                                               Foreground="{StaticResource SystemControlForegroundAccentBrush}" />
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </GridView.GroupStyle>
                </common:ScrollGridView>
            </SemanticZoom.ZoomedInView>
            <SemanticZoom.ZoomedOutView>
                <ListView x:Name="AlbumsZoomedOutGridView"
                          Padding="{StaticResource PageThickness}" Background="#BF000000"
                          ItemContainerStyle="{StaticResource GroupListViewItemStyle}"
                          ItemsSource="{x:Bind ViewModel.ViewSource.View.CollectionGroups, Mode=OneWay}"
                          ItemTemplate="{StaticResource JumpTemplate}" />
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>

        <SemanticZoom Grid.Row="1" x:Name="AlbumsListZoom" Visibility="Collapsed">
            <SemanticZoom.ZoomedInView>
                <common:ScrollListView x:Name="AlbumsListView"
                                       extensions:ListViewExtensions.BindableSelection="{Binding SelectedItems, Mode=TwoWay}"
                                       Padding="{StaticResource PageThickness}"
                                       VerticalOffset="{x:Bind ViewModel.ListViewVerticalOffset, Mode=TwoWay}"
                                       SelectionMode="{x:Bind ViewModel.IsSelectMode, Mode=OneWay, Converter={StaticResource NoneMultiSelectionModeConverter}}"
                                       IsItemClickEnabled="True"
                                       ItemsSource="{x:Bind ViewModel.ViewSource.View, Mode=OneWay}"
                                       ItemTemplate="{StaticResource AlbumNarrowTemplate}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.AlbumClickCommand}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                    <ListView.GroupStyle>
                        <GroupStyle HidesIfEmpty="True">
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate x:DataType="tools:AlphaKeyGroup">
                                    <TextBlock Text="{x:Bind Key}" FontSize="14.5"
                                               Foreground="{StaticResource SystemControlForegroundAccentBrush}" />
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>
                </common:ScrollListView>
            </SemanticZoom.ZoomedInView>
            <SemanticZoom.ZoomedOutView>
                <ListView x:Name="AlbumsZoomedOutListView"
                          Padding="{StaticResource PageThickness}" Background="#BF000000"
                          ItemContainerStyle="{StaticResource GroupListViewItemStyle}"
                          ItemsSource="{x:Bind ViewModel.ViewSource.View.CollectionGroups, Mode=OneWay}"
                          ItemTemplate="{StaticResource JumpTemplate}" />
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="DeviceFamilyStates">
                <VisualState>
                    <VisualState.StateTriggers>
                        <customTriggers:DeviceFamilyTrigger DeviceFamily="Mobile" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NoMusicPanel.Margin" Value="{StaticResource MobilePageSideThickness}" />
                        <Setter Target="AlbumsGridView.Padding" Value="{StaticResource MobilePageThickness}" />
                        <Setter Target="AlbumsZoomedOutGridView.Padding" Value="{StaticResource MobilePageThickness}" />
                        <Setter Target="AlbumsListView.Padding" Value="{StaticResource MobilePageThickness}" />
                        <Setter Target="AlbumsZoomedOutListView.Padding" Value="{StaticResource MobilePageThickness}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="WindowSizeStates">
                <VisualState x:Name="NarrowScreen">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AlbumsListZoom.Visibility" Value="Visible" />
                        <Setter Target="AlbumsGridZoom.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="WideScreen">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    <Page.BottomAppBar>
        <controls:SelectModeCommandBar SelectedItems="{x:Bind ViewModel.SelectedItems, Mode=OneWay}" Visibility="{x:Bind ViewModel.IsSelectMode, Converter={StaticResource VisibilityConverter}, Mode=OneWay}" />
    </Page.BottomAppBar>
</Page>